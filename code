#include <iostream>

using namespace std;


// Función para imprimir el arreglo con un ciclo for
void imprimirArregloFor(int arreglo[], int tamanoArreglo) {
    cout << "El arreglo es: ";
    for (int i = 0; i < tamanoArreglo; i++) {
        cout << arreglo[i] << " ";
    }
    cout << endl;
}

// Función para imprimir el arreglo con un while
void imprimirArregloWhile(int arreglo[], int tamanoArreglo) {
    cout << "El arreglo es: ";
    int i = 0;
    while (i < tamanoArreglo) {
        cout << arreglo[i] << " ";
        i++;
    }
    cout << endl;
}

// Función para cargar el número contenido en la posición media del arreglo
int cargarNumeroPosicionMedia(int arreglo[], int tamanoArreglo) {
    int posicionMedia = tamanoArreglo / 2;
    return arreglo[posicionMedia];
}

// Función para imprimir los números pares contenidos en el arreglo
void imprimirNumerosPares(int arreglo[], int tamanoArreglo) {
    cout << "Los numeros pares del arreglo son: ";
    for (int i = 0; i < tamanoArreglo; i++) {
        if (arreglo[i] % 2 == 0) {
            cout << arreglo[i] << " ";
        }
    }
    cout << endl;
}

// Función para verificar si un número es primo
bool esPrimo(int numero) {
    if (numero <= 1) {
        return false;
    }
    for (int i = 2; i * i <= numero; i++) {
        if (numero % i == 0) {
            return false;
        }
    }
    return true;
}

// Función para imprimir los números primos contenidos en el arreglo
void imprimirNumerosPrimos(int arreglo[], int tamanoArreglo) {
    cout << "Los numeros primos del arreglo son: ";
    for (int i = 0; i < tamanoArreglo; i++) {
        if (esPrimo(arreglo[i])) {
            cout << arreglo[i] << " ";
        }
    }
    cout << endl;
}

// Función para obtener el número mayor del arreglo
int obtenerNumeroMayor(int arreglo[], int tamanoArreglo) {
    int mayor = arreglo[0];
    for (int i = 1; i < tamanoArreglo; i++) {
        if (arreglo[i] > mayor) {
            mayor = arreglo[i];
        }
    }
    return mayor;
}

// Función para ordenar el arreglo de menor a mayor usando el algoritmo de selección
void ordenarArreglo(int arreglo[], int tamanoArreglo) {
    for (int i = 0; i < tamanoArreglo - 1; i++) {
        int indiceMenor = i;
        for (int j = i + 1; j < tamanoArreglo; j++) {
            if (arreglo[j] < arreglo[indiceMenor]) {
                indiceMenor = j;
            }
        }
        int temp = arreglo[i];
        arreglo[i] = arreglo[indiceMenor];
        arreglo[indiceMenor] = temp;
    }
}

int main() {
    string nombreCompleto;
    int tamanoArreglo;

    // Solicitar el nombre completo del usuario
    cout << "Ingrese su nombre completo: ";
    getline(cin, nombreCompleto);

    // Solicitar el tamaño del arreglo al usuario
    cout << "Ingrese el tamano del arreglo: ";
    cin >> tamanoArreglo;

    // Crear el arreglo de números enteros del tamaño indicado por el usuario
    int arreglo[tamanoArreglo];

    // Solicitar al usuario el tipo de llenado que desea
    char tipoLlenado;
    cout << "Seleccione el tipo de llenado: " << endl;
    cout << "a) Automatico" << endl;
    cout << "b) Manual" << endl;
    cin >> tipoLlenado;

    // Llenar el arreglo según el tipo de llenado seleccionado por el usuario
    if (tipoLlenado == 'a') {
        // Llenado automático con números entre 100 y 200
        for (int i = 0; i < tamanoArreglo; i++) {
            arreglo[i] = rand() % 101 + 100;
        }
    } else if (tipoLlenado == 'b') {
        // Llenado manual con números entre 0 y 99
        for (int i = 0; i < tamanoArreglo; i++) {
            cout << "Ingrese el valor del elemento " << i << ": ";
            cin >> arreglo[i];
            while (arreglo[i] < 0 || arreglo[i] > 99) {
                cout << "El valor debe estar entre 0 y 99. Ingrese otro valor: ";
                cin >> arreglo[i];
            }
        }
    } else {
        cout << "Opcion no valida. Saliendo del programa." << endl;
        return 0;
    }

    // Imprimir el arreglo en la consola
    cout << "El arreglo generado es: ";
    for (int i = 0; i < tamanoArreglo; i++) {
        cout << arreglo[i] << " ";
    }
    cout << endl;

    return 0;
}
